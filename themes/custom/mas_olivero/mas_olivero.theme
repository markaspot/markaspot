<?php

/**
 * @file
 * Functions to support theming in the Olivero theme.
 */

use Drupal\olivero\OliveroPreRender;
use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Render\Element;
use Drupal\user\UserInterface;

/**
 * Implements hook_preprocess_entity().
 */
function mas_olivero_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  if (is_object($paragraph->field_status_term[0])) {
    $variables['status'] = $paragraph->status_note;
    // $variables['statusColor'] =  str_replace('#', '', $paragraph->field_status_term[0]->entity->field_status_hex->color);
  }
}

function mas_olivero_preprocess_field(&$variables) {
  $element = $variables['element'];
  $variables['field_name'] = $element['#field_name'];
  $entity = isset($element[0]["#taxonomy_term"]) ? $element[0]["#taxonomy_term"] : FALSE;
  $vocabularies= ['category', 'status'];
  foreach ($vocabularies as $vocabulary) {
    if ($variables['field_name'] == "field_{$vocabulary}") {
      $variables['attributes']['class'][] = $vocabulary;

      if ($entity !== FALSE) {
        $item = $variables["items"][0]["content"]["#taxonomy_term"];


        if ($item->hasField("field_{$vocabulary}_hex")) {
          $variables['color'] = $item->get("field_{$vocabulary}_hex")->getValue()[0]['color'];
        }
        if ($item->hasField("field_{$vocabulary}_icon")) {
          $variables['icon'] = $item->get("field_{$vocabulary}_icon")->getValue()[0]['value'];
        }
        if ($item->hasField("name")) {
          $variables['name'] = $item->get("name")->getValue()[0]['value'];
        }

        $variables['name'] = $item->get("name")->getValue()[0]['value'];
      }
    }
  }
}




/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function mas_olivero_theme_suggestions_block_alter(&$suggestions, $variables) {

  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('mas_olivero_', 'olivero_', $suggestion);
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function mas_olivero_page_attachments_alter(&$page) {
  $viewport = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no',
    ),
  );
  $page['#attached']['html_head'][] = [$viewport, 'viewport'];
}

