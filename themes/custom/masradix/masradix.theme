<?php

/**
 * @file
 * Theme functions.
 */

use Drupal\Core\Render\Element;

// Include all files from the includes directory.
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}

/**
 * Implements theme_preprocess_field().
 */
function masradix_preprocess_field(&$variables, $hook) {

  $element = $variables['element'];

  if ($element['#field_name'] == 'field_request_image') {
    $variables['items'][0]['content']['#options']['attributes']['class'][] = '';
  }
}

/**
 * Implements theme_preprocess_form_element().
 */
function masradix_preprocess_form_element(&$variables) {
  $element = &$variables['element'];

  if (!empty($variables['label'])) {
    if (!empty($element['#label_prefix'])) {
      $variables['label']['#prefix'] = $element['#label_prefix'];
    }
    if (!empty($element['#label_suffix'])) {
      $variables['label']['#suffix'] = $element['#label_suffix'];
    }
  }
}

/**
 * Prepares variables for image widget templates.
 *
 * Default template: image-widget.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: A render element representing the image field widget.
 */
function masradix_preprocess_image_widget(&$variables) {
  $element = $variables['element'];
  $variables['attributes'] = array(
    'class' => array(
      'col-lg-12 col-sm-12 col-12',
      'image-widget',
      'js-form-managed-file',
      'form-managed-file',
      'clearfix',
    ),
  );
  if($element['#preview_image_style'] == "thumbnail") {
    $variables['attributes']['class'][] = "img-circle";
  }
  if (!empty($element['fids']['#value'])) {
    $file = reset($element['#files']);
    $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size badge">' . format_size($file->getSize()) . '</span> ';
  }

  $variables['data'] = array();
  foreach (Element::children($element) as $child) {
    $variables['data'][$child] = $element[$child];
  }

}

/**
 * Implements hook_preprocess_entity().
 */
function masradix_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  if (is_object($paragraph->field_status_term[0])) {
    $variables['status'] = $paragraph->status_note;
    $variables['statusColor'] =  str_replace('#', '', $paragraph->field_status_term[0]->entity->field_status_hex->color);
  }
  // Tutorial https://www.webwash.net/display-paragraphs-edge-to-edge-using-bootstrap-in-drupal-8.
}

/**
 * Implements theme_preprocess_node().
 */
function masradix_preprocess_node(&$variables) {


  if (isset($variables["content"]["field_category"])) {
    foreach ($variables['node']->field_category as $item) {
      if ($item->entity) {
        $variables['mas_category']['label'] = $variables["content"]["field_category"][0]["#plain_text"];
        $variables['mas_category']['icon']  = $item->entity->field_category_icon->value;
        $variables['mas_category']['color'] = str_replace('#', '', $item->entity->field_category_hex->color);
      }
    }
  }
  if (theme_get_setting('status') != FALSE) {

    if (isset($variables["content"]["field_status"])) {
      foreach ($variables['node']->field_status_notes as $item) {
        if (isset($item->entity->field_status_term[0]->entity->name->value)) {
          $variables['mas_status']['label'] = $variables["content"]["field_status"][0]["#plain_text"];
          $variables['mas_status']['icon']  = $item->entity->field_status_term[0]->entity->field_status_icon->value;
          $variables['mas_status']['color'] = str_replace('#', '', $item->entity->field_status_term[0]->entity->field_status_hex->color);
        }
      }
    }
  }
}


function masradix_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  $form['status'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Status '),
    '#default_value' => theme_get_setting('status'),
    '#description'   => t("Show status on node details and teaser"),
  );
}