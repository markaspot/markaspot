<?php

/**
 * @file
 * Contains service_request.module.
 *
 * This is a content type to run an georeport v2 server.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\paragraphs\Entity\Paragraph;


/**
 * Implements hook_node_presave().
 */
function service_request_node_presave(EntityInterface $node) {

  // Service Request Creation.
  if ($node->bundle() == 'service_request' && !$node->id()) {
    // Get some relevant config.
    $config = \Drupal::configFactory()
      ->getEditable('markaspot_open311.settings');
    // Add an intitial paragraph on post
    // Status when inserting.

    $status_open_start = $config->get('status_open_start');

    // todo: put this in config.
    $status_note_initial = t('The service request has been created.');

    $paragraph = Paragraph::create([
      'type' => 'status',
      'field_status_note' => array(
        "value" => $status_note_initial,
        'format' => 'plain_text',
      ),
      'field_status_term' => array(
        "target_id" => $status_open_start,
      ),
    ]);
    $paragraph->save();

    $node->field_status_notes = array(
      array(
        'target_id' => $paragraph->id(),
        'target_revision_id' => $paragraph->getRevisionId(),
      ),
    );
    $node->field_status = array(
      array(
        'target_id' =>  $status_open_start,
      ),
    );
  }
  // Service Request Update
  elseif ($node->bundle() == 'service_request' && $node->id()) {

    foreach ($node->field_status_notes as $paragraph) {
      // Access the paragraph entity like this:
      $status_notes[] = $paragraph->entity;
    }
    // Get new Status from Taxonomy Reference.
    $newStatus = $node->field_status->target_id;
    if (isset($status_notes)) {
      if (is_array(end($status_notes))) {
        // Load last Paragraph and Update the Status there.
        $paragraph = Paragraph::load(end($status_notes)->id());

        $paragraph->field_status_term->target_id = $newStatus;
        // Save paragraph.
        $paragraph->save();
      }
    }
  }

}

/**
 * Implements hook_form_alter().
 */
function service_request_form_alter(&$form, &$form_state, $form_id) {
  // $status_widget = $form['field_status_notes']['widget'];
  // todo:
  // Disable paragraph subform if subform hooks are stable:
  // https://www.drupal.org/project/paragraphs/issues/2868155
  $form['#attached']['library'][] = 'service_request/paragraphs';
  $form['#attached']['drupalSettings']['service_request']['paragraphs']['variable'] = 'value';

  return $form;
}
